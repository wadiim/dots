#!/usr/bin/env bash

loc="$( sfp -p )"

assert_eq() {
    input="$1"
    expected="$2"
    actual="$( echo $input | grep -oP $loc )"

    if [ "$(echo $actual | sed 's/^\s*//; s/\s*$//')" = "$expected" ]; then
        echo -ne "\e[30;32m.\e[0m"
    else
        echo -e "\e[30;31mFAIL\e[0m"
        echo "    Input:    '$input'"
        echo "    Expected: '$expected'"
        echo "    Actual:   '$actual'"
    fi
}

assert_eq './foo.txt' './foo.txt'
assert_eq './foo.txt:2' './foo.txt:2'
assert_eq './foo.txt:2:' './foo.txt:2'
assert_eq './foo.txt:2:11' './foo.txt:2:11'
assert_eq './foo:2:11' './foo:2:11'
assert_eq '"./foo.txt:2:11"' '"./foo.txt:2:11"'
assert_eq '"foo/bar.txt:2:11"' '"foo/bar.txt:2:11"'
assert_eq '[Error] bin/foo:12' 'bin/foo:12'
assert_eq 'Loading foo/bar.conf file' 'foo/bar.conf'
assert_eq '~/.bashrc' '~/.bashrc'
assert_eq '.git/logs/HEAD:8:157:380c' '.git/logs/HEAD:8:157'
assert_eq 'bash/.bashrc:5:16:' 'bash/.bashrc:5:16'
assert_eq '/etc/vconsole.conf' '/etc/vconsole.conf'
assert_eq '/var/lib/foo/data' '/var/lib/foo/data'
assert_eq 'listening on "/var/run/foo/.s.SQL.11"' '"/var/run/foo/.s.SQL.11"'
assert_eq '/var/lib/foo/bar@3e9d8a6c34dd' '/var/lib/foo/bar@3e9d8a6c34dd'
assert_eq 'Launching /foo-bar.d/10-baz-qux.sh' '/foo-bar.d/10-baz-qux.sh'
assert_eq 'ignoring /foo-bar.d/* ' '/foo-bar.d/'

assert_eq 'foo/bar' ''
assert_eq 'x foo/bar x' ''
assert_eq 'foo=0/1908970' ''
assert_eq 'foo bar baz' ''
assert_eq 'foo tmux.conf bar' ''
assert_eq 'foo a.b.c bar' ''
assert_eq 'a.b.c:2'
assert_eq 'Website: https://example.org' ''
assert_eq '2025/07/12' ''

# TODO
#assert_eq 'nginx/1.27.4' ''

echo ''
