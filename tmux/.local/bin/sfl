#!/usr/bin/env bash

start_delim='(^|[[:space:]"])'
relative_path='(\.|\.\.)'
start_path="($relative_path|~|/|[[:alnum:]_-]*)?"
component='[[:alnum:]_.#$%&+=@-]'
intermediate_paths="(/$component+)"
line_no='(:[0-9]+)'
file_end="($component+$line_no?$line_no?)"
end="(\"|\.$file_end|$component+$line_no$line_no?)"

loc="$start_delim($start_path(\
${intermediate_paths}+$end\
|${intermediate_paths}{2,}$end?\
|$relative_path/$file_end\
|\.$component+${intermediate_paths}+$end\
)|~${intermediate_paths})"

# Returns the ID of the tmux pane that the script is executed in.
get_tmux_curr_pane_id() {
    tmux display-message -p "#{pane_id}"
}

# Enters the copy mode in the current tmux pane.
enter_tmux_copy_mode() {
    tmux copy-mode
}

# Moves the cursor to the beginning of the previous prompt. It assumes that
# the shell emits prompts that starts with the FTCS_PROMPT sequence and
# that the current tmux pane is in copy mode.
jump_to_previous_prompt() {
    tmux send-keys -X previous-prompt
}

# Selects file paths between the current position and the end of the buffer,
# starting from the first one.
select_paths() {
    tmux send-keys -X search-forward "$loc"
}

# Selects file paths between the current position and the beginning of the
# buffer, starting from the last one.
select_paths_backward() {
    tmux send-keys -X search-backward "$loc"
}

if (( "${#@}" < 1 )); then
    enter_tmux_copy_mode
    jump_to_previous_prompt
    select_paths
elif [[ "$1" == "-r" ]]; then
    enter_tmux_copy_mode
    select_paths_backward
elif [[ "$1" == "-p" ]]; then
    echo "$loc"
fi
